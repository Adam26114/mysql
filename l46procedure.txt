=>Stored Routines
(i) PROCEDURE (stored procedure)
    (a) IN = Input Parameter
    (b) OUT = Output Parameter
    (c) INOUT = Inout Parameter
(ii) FUNCTION
        (a) Default Function (Build in)
        (b) User Define Function
            (i) IN = Input Parameter

________________________________________________
=>PROCEDURE

CREATE TABLE IF NOT EXISTS capitals(
id INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
date DATE NOT NULL,
name VARCHAR(50) NOT NULL,
amount DECIMAL(10,2) NOT NULL,
currency ENUM('MMK','USD') NOT NULL,
accounts ENUM('credit','debit') NOT NULL
);

DESC capitals;

INSERT INTO capitals(date,name,amount,currency,accounts)
VALUES('2022/1/20','mr.tun',500000,1,1),
('2022/1/31','ms.july',300000,1,1),
('2022/2/1','ms.july',200000,1,1),
('2022/2/1','mr.tin',1000,2,1),
('2022/2/2','ms.july',3000,2,1),
('2022/2/2','mr.tin',1000,2,1),
('2022/2/3','mr.tin',1000,2,1),
('2022/2/14','mr.tin',200000,1,2);

SELECT * FROM capitals;

=capitals By MMK
SELECT name,SUM(amount),currency,accounts
FROM capitals
WHERE accounts = 'credit' AND currency = 'MMK'
GROUP BY name;

----------VIEW----------
CREATE VIEW vw_capitalbymmk AS
SELECT name,SUM(amount),currency,accounts
FROM capitals
WHERE accounts = 'credit' AND currency = 'MMK'
GROUP BY name;



=capitals By USD
SELECT name,SUM(amount),currency,accounts
FROM capitals
WHERE accounts = 'credit' AND currency = 'USD'
GROUP BY name;

----------VIEW----------
CREATE VIEW vw_capitalbyusd AS
SELECT name,SUM(amount),currency,accounts
FROM capitals
WHERE accounts = 'credit' AND currency = 'USD'
GROUP BY name;

SELECT * FROM vw_capitalbymmk;
SELECT * FROM vw_capitalbyusd;

________________________________________________
=> PROCEDURE

=Capital by Accounts

SELECT * FROM capitals;

SELECT date,name,amount,currency,accounts
FROM capitals
WHERE accounts = 'credit'
ORDER BY data DESC;

SELECT date,name,amount,currency,accounts
FROM capitals
WHERE accounts = 'debit'
ORDER BY data DESC;

DELIMITER //

    CREATE PROCEDURE capitalbyaccountsreport_proc(p_acc VARCHAR(10))
    BEGIN
        SELECT date,name,amount,currency,accounts
        FROM capitals
        WHERE accounts = p_acc
        ORDER BY date DESC;
    END; //

DELIMITER ;

(js လို perameter ပေးရတယ် perameter ကို DECLARE လုပ်ပေးရသေးတယ်)

SHOW PROCEDURE STATUS WHERE DB = 'wdf5308';

CALL capitalbyaccountsreport_proc('credit');
CALL capitalbyaccountsreport_proc('debit');

=>DROP PROCEDURE
DROP PROCEDURE IF EXISTS capitalbyaccountsreport_proc;

SHOW PROCEDURE STATUS WHERE DB = 'wdf5308';

________________________________________________
=>IN

=Capital By Date
SELECT date,name,accounts,currency,accounts
FROM capitals
WHERE date = '2022-2-1';

DELIMITER $$

    CREATE PROCEDURE capitalbydatereport_proc(IN p_date DATE)
    BEGIN
        SELECT date,name,accounts,currency,accounts
        FROM capitals
        WHERE date = p_date;
    END; $$ 

DELIMITER ;

SHOW PROCEDURE STATUS WHERE DB = 'wdf5308';

CALL capitalbydatereport_proc('2022-2-1');
CALL capitalbydatereport_proc('2022-2-14');

________________________________________________

=>Input and Output Parameter

SELECT * FROM employees;

=Total Staff

SELECT COUNT(*) FROM employees
WHERE city = 'bago';

DELIMITER //

    CREATE PROCEDURE totalstaffreport_proc(
        IN p_city VARCHAR(50),
        OUT p_totalemp INT
    )
    BEGIN
        SELECT COUNT(*) 
        INTO p_totalemp FROM employees
        WHERE city = p_city;
    END; //

DELIMITER ;

_____________________________________

SET @city := 'yangon';
SET @totalemp = 0;
SELECT @city,@totalemp;

CALL totalstaffreport_proc(@city,@totalemp);
SELECT @city,@totalygemp;
_____________________________________


SET @city := 'yangon';
SET @totalygemp = 0;
SELECT @city,@totalygemp;

CALL totalstaffreport_proc(@city,@totalygemp);
SELECT @city,@totalygemp;

SET @city := 'bago';
SET @totalbgemp = 0;
SELECT @city,@totalybgemp;

CALL totalstaffreport_proc(@city,@totalbgemp);
SELECT @city,@totalygemp;

SELECT @totalygemp,@totalbgemp;

SELECT (@totalygemp - @totalbgemp) AS diffemp; 
 
DROP PROCEDURE IF EXISTS totalstaffreport_proc;
_______________

=MIN / MAX salary

SELECT MIN(salary),MAX(salary),city FROM employees
WHERE city = 'yangon';


DELIMITER //
    CREATE PROCEDURE minmaxsalaryreport_proc(
        IN p_city VARCHAR(50),
        OUT p_minsalary INT,
        OUT p_maxsalary INT
    )
    BEGIN
        SELECT MIN(salary),MAX(salary)
        INTO p_minsalary,p_maxsalary
        FROM employees
        WHERE city = p_city;
    END; //
DELIMITER ;

SET @min = 0;
    @max = 0;
SELECT @min,@max;

CALL minmaxsalaryreport_proc('bago',@min,@max);

SELECT @min,@max;
SELECT (@min - @max) AS different;

DROP PROCEDURE IF EXISTS minmaxsalaryreport_proc;
_____________________________________
=> INOUT,INPUT  And Output payment

SELECT MIN(age),MAX(age)
FROM employees
WHERE city = 'yangon';

DELIMITER //

    CREATE PROCEDURE minmaxagereport_proc(
        INOUT p_city VARCHAR(50),
        OUT p_minage INT,
        OUT p_maxage INT
    )
    BEGIN
        SELECT MIN(age),MAX(age)
        INTO p_minage,p_maxage
        FROM employees
        WHERE city = p_city;
    END; //

DELIMITER ;

SET @city = 'yangon';
SET @youngest := 0;
SET @elderly := 0;
SELECT @city,@youngest,@elderly;

CALL minmaxagereport_proc(@city,@youngest,@elderly);
SELECT @city,@youngest,@elderly;

_____________________________________

13PROC

